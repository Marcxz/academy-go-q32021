// Code generated by MockGen. DO NOT EDIT.
// Source: db_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRouteGenerator is a mock of RouteGenerator interface.
type MockRouteGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockRouteGeneratorMockRecorder
}

// MockRouteGeneratorMockRecorder is the mock recorder for MockRouteGenerator.
type MockRouteGeneratorMockRecorder struct {
	mock *MockRouteGenerator
}

// NewMockRouteGenerator creates a new mock instance.
func NewMockRouteGenerator(ctrl *gomock.Controller) *MockRouteGenerator {
	mock := &MockRouteGenerator{ctrl: ctrl}
	mock.recorder = &MockRouteGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRouteGenerator) EXPECT() *MockRouteGeneratorMockRecorder {
	return m.recorder
}

// GenerateRoute mocks base method.
func (m *MockRouteGenerator) GenerateRoute(arg0, arg1, arg2, arg3 float64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRoute", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateRoute indicates an expected call of GenerateRoute.
func (mr *MockRouteGeneratorMockRecorder) GenerateRoute(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRoute", reflect.TypeOf((*MockRouteGenerator)(nil).GenerateRoute), arg0, arg1, arg2, arg3)
}

// MockGeoDB is a mock of GeoDB interface.
type MockGeoDB struct {
	ctrl     *gomock.Controller
	recorder *MockGeoDBMockRecorder
}

// MockGeoDBMockRecorder is the mock recorder for MockGeoDB.
type MockGeoDBMockRecorder struct {
	mock *MockGeoDB
}

// NewMockGeoDB creates a new mock instance.
func NewMockGeoDB(ctrl *gomock.Controller) *MockGeoDB {
	mock := &MockGeoDB{ctrl: ctrl}
	mock.recorder = &MockGeoDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeoDB) EXPECT() *MockGeoDBMockRecorder {
	return m.recorder
}

// GenerateRoute mocks base method.
func (m *MockGeoDB) GenerateRoute(arg0, arg1, arg2, arg3 float64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRoute", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateRoute indicates an expected call of GenerateRoute.
func (mr *MockGeoDBMockRecorder) GenerateRoute(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRoute", reflect.TypeOf((*MockGeoDB)(nil).GenerateRoute), arg0, arg1, arg2, arg3)
}
