// Code generated by MockGen. DO NOT EDIT.
// Source: geo_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGeo is a mock of Geo interface.
type MockGeo struct {
	ctrl     *gomock.Controller
	recorder *MockGeoMockRecorder
}

// MockGeoMockRecorder is the mock recorder for MockGeo.
type MockGeoMockRecorder struct {
	mock *MockGeo
}

// NewMockGeo creates a new mock instance.
func NewMockGeo(ctrl *gomock.Controller) *MockGeo {
	mock := &MockGeo{ctrl: ctrl}
	mock.recorder = &MockGeoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeo) EXPECT() *MockGeoMockRecorder {
	return m.recorder
}

// GeocodeAddress mocks base method.
func (m *MockGeo) GeocodeAddress(arg0 string) (float64, float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeocodeAddress", arg0)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(float64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GeocodeAddress indicates an expected call of GeocodeAddress.
func (mr *MockGeoMockRecorder) GeocodeAddress(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeocodeAddress", reflect.TypeOf((*MockGeo)(nil).GeocodeAddress), arg0)
}
